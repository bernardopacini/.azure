# resources:
#   repositories:
#   - repository: github_template  # identifier (A-Z, a-z, 0-9, and underscore)
#     type: github  # see the following "Type" topic
#     name: mdolab/.github  # repository name (format depends on `type`)
#     endpoint: bernardopacini
parameters:
- name: 'DOCKER_WORKING_DIR'
  type: string
- name: 'DOCKER_MOUNT_DIR'
  type: string

jobs:
# - job:
#   strategy:
#     matrix:
#       'c7-gcc-ompi-latest':
#         DOCKER_TAG: c7-gcc-ompi-latest
#       'c7-intel-impi-latest':
#         DOCKER_TAG: c7-intel-impi-latest
#       'u20-gcc-ompi-latest':
#         DOCKER_TAG: u20-gcc-ompi-latest
#       'u20-gcc-ompi-stable':
#         DOCKER_TAG: u20-gcc-ompi-stable
#   steps:
#   - script: docker pull mdolab/public:$(DOCKER_TAG)
#   - script: docker run -t -d 
#         --name app
#         --mount "type=bind,src=$(pwd),target=${{ parameters.DOCKER_MOUNT_DIR }}"
#         mdolab/public:$(DOCKER_TAG)
#         /bin/bash
#   - script: docker exec app /bin/bash -c "rm -rf ${{ parameters.DOCKER_WORKING_DIR }} && cp -r ${{ parameters.DOCKER_MOUNT_DIR }} ${{ parameters.DOCKER_WORKING_DIR }}"
#   - script: docker exec app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd ${{ parameters.DOCKER_WORKING_DIR }} && cp config/defaults/config.LINUX_GFORTRAN.mk config/config.mk && make";
#   - script: docker exec app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd ${{ parameters.DOCKER_WORKING_DIR }} && pip install ."
#   - script: docker exec app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd ${{ parameters.DOCKER_WORKING_DIR }} && testflo . -v"
#   - script: docker rm -f app

- job: flake8
  steps:
  - checkout: self
  - checkout: azure_template
  - script: |
      ls -a .azure/
      cd pyspline
      cp ../.azure/.flake8 .
      python3 -m pip install -U pip
      pip3 install flake8
      python3 -m flake8 . --count --show-source --statistics

- job: black
  steps:
  - script: |
      python3 -m pip install -U pip
      pip3 install black==20.8b1
      python3 -m black . --check --diff -l 120